# src/whispercpp_transcriber.py
import subprocess, os, time, re

WHISPER_CLI   = r"D:/whisper.cpp/build/bin/whisper-cli.exe"
WHISPER_MODEL = r"D:/whisper.cpp/models/ggml-medium.bin"

ansi_re = re.compile(r"\x1B\[[0-9;]*m")

def transcribe_with_cpp(wav_path: str, lang: str = "ru") -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫—É —Å—Ä–∞–∑—É –∏–∑ stdout whisper-cli.exe."""
    wav_path = os.path.abspath(wav_path)
    assert os.path.isfile(wav_path), f"–§–∞–π–ª {wav_path} –Ω–µ –Ω–∞–π–¥–µ–Ω"
    assert os.path.isfile(WHISPER_CLI),   "whisper-cli.exe –Ω–µ –Ω–∞–π–¥–µ–Ω"
    assert os.path.isfile(WHISPER_MODEL), "–§–∞–π–ª –º–æ–¥–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω"

    cmd = [
        WHISPER_CLI,
        "-m", WHISPER_MODEL,
        "-f", wav_path,
        "-l", lang,
        "-pc", "0",
        # –±–µ–∑ -of / -otxt ‚Üí CLI –ø–µ—á–∞—Ç–∞–µ—Ç —á–∏—Å—Ç—ã–π —Ç–µ–∫—Å—Ç –≤ stdout
    ]

    t0 = time.time()
    result = subprocess.run(
        cmd,
        capture_output=True,     # ‚Üê –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º stdout/stderr
        text=True,
        encoding="utf-8",
        errors="ignore",
    )
    elapsed = time.time() - t0
    print(f"üß† whisper-cli –æ—Ç—Ä–∞–±–æ—Ç–∞–ª –∑–∞ {elapsed:.2f} —Å–µ–∫")

    if result.returncode != 0:
        raise RuntimeError(f"whisper-cli –æ—à–∏–±–∫–∞:\n{result.stderr}")
    
    clean = ansi_re.sub("", result.stdout)          # —É–±–∏—Ä–∞–µ–º —Ü–≤–µ—Ç–æ–≤—ã–µ –∫–æ–¥—ã
    clean = re.sub(r"\[.*?-->.*?\]", "", clean)     # —É–±–∏—Ä–∞–µ–º —Ç–∞–π–º-–º–µ—Ç–∫–∏
    transcript = " ".join(line.strip()
                          for line in clean.splitlines()
                          if line.strip())


    return transcript
