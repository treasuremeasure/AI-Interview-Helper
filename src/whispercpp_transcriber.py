# src/whispercpp_transcriber.py
import subprocess, os, time, uuid, pathlib

WHISPER_CLI   = r"D:/whisper.cpp/build/bin/whisper-cli.exe"
WHISPER_MODEL = r"D:/whisper.cpp/models/ggml-medium.bin"

def transcribe_with_cpp(wav_path: str, lang: str = "ru") -> str:
    """
    –°—Ç–∞—Ä—Ç—É–µ—Ç whisper-cli.exe –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç.
    –§–∞–π–ª .txt —Å–æ–∑–¥–∞—ë—Ç—Å—è –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–∞–ø–∫–µ —Ä—è–¥–æ–º —Å .wav.
    """
    wav_path   = os.path.abspath(wav_path)
    assert os.path.isfile(wav_path), f"–§–∞–π–ª {wav_path} –Ω–µ –Ω–∞–π–¥–µ–Ω"

    # –∫–ª–∞–¥—ë–º —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫—É —Ä—è–¥–æ–º —Å wav, –Ω–æ –∏–º—è –¥–µ–ª–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–º
    txt_path = pathlib.Path(wav_path).with_suffix(f".{uuid.uuid4().hex}.txt")

    cmd = [
        WHISPER_CLI,
        "-m", WHISPER_MODEL,
        "-f", wav_path,
        "-l", lang,
        "-of", str(txt_path),     # <-- –Ø–í–ù–û —É–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—ã–π .txt
        "--print-colors", "false"
    ]

    t0 = time.time()
    # –≤—ã–≤–æ–¥ –Ω–∞–º –Ω–µ –≤–∞–∂–µ–Ω ‚Üí –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ DEVNULL, —á—Ç–æ–±—ã –Ω–µ –ª–æ–≤–∏—Ç—å UnicodeDecodeError
    result = subprocess.run(
        cmd,
        stdout=subprocess.DEVNULL,
        stderr=subprocess.DEVNULL,
        encoding="utf-8",        # ‚Üê –ø—É—Å—Ç—å –≤—Å—ë —Ä–∞–≤–Ω–æ –±—É–¥–µ—Ç UTF-8
        errors="ignore",
    )

    elapsed = time.time() - t0
    print(f"üß† whisper-cli –æ—Ç—Ä–∞–±–æ—Ç–∞–ª –∑–∞ {elapsed:.2f} —Å–µ–∫")

    if result.returncode != 0:
        raise RuntimeError(f"whisper-cli –≤–µ—Ä–Ω—É–ª –∫–æ–¥ {result.returncode}")

    if not txt_path.exists():
        raise FileNotFoundError(f"–§–∞–π–ª —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏ {txt_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")

    txt = txt_path.read_text(encoding="utf-8").strip()
    txt_path.unlink(missing_ok=True)      # —á–∏—Å—Ç–∏–º –∑–∞ —Å–æ–±–æ–π
    return txt
